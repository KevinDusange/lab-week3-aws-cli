#!/usr/bin/env bash

set -euo pipefail

region="us-west-2"
key_name="bcitkey"

# Load VPC and subnet info
source ./infrastructure_data

# Get most recent Debian AMI
debian_ami=$(aws ec2 describe-images \
  --owners "136693071363" \
  --filters 'Name=name,Values=debian-*-amd64-*' 'Name=architecture,Values=x86_64' 'Name=virtualization-type,Values=hvm' \
  --query 'Images | sort_by(@, &CreationDate) | [-1].ImageId' \
  --output text)

# Create security group allowing SSH and HTTP from anywhere
security_group_id=$(aws ec2 create-security-group \
  --group-name MySecurityGroup \
  --description "Allow SSH and HTTP" \
  --vpc-id "$vpc_id" \
  --query 'GroupId' \
  --region "$region" \
  --output text)

aws ec2 authorize-security-group-ingress \
  --group-id "$security_group_id" \
  --protocol tcp --port 22 --cidr 0.0.0.0/0 \
  --region "$region"

aws ec2 authorize-security-group-ingress \
  --group-id "$security_group_id" \
  --protocol tcp --port 80 --cidr 0.0.0.0/0 \
  --region "$region"

# Launch an EC2 instance in the public subnet
instance_id=$(aws ec2 run-instances \
  --image-id "$debian_ami" \
  --instance-type t3.micro \
  --key-name "$key_name" \
  --subnet-id "$subnet_id" \
  --security-group-ids "$security_group_id" \
  --associate-public-ip-address \
  --region "$region" \
  --query 'Instances[0].InstanceId' \
  --output text)

echo "Launched EC2 instance: $instance_id"

# Wait until the instance is running
aws ec2 wait instance-running --instance-ids "$instance_id" --region "$region"
echo "Instance is running."

# Get the public IP address
public_ip=$(aws ec2 describe-instances \
  --instance-ids "$instance_id" \
  --region "$region" \
  --query 'Reservations[0].Instances[0].PublicIpAddress' \
  --output text)

echo "Public IP: $public_ip"

# Save instance data to a file
cat > instance_data <<EOF
INSTANCE_ID=$instance_id
PUBLIC_IP=$public_ip
REGION=$region
EOF

echo "Instance data saved to instance_data"